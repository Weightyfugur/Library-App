// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace LibraryApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using LibraryApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using LibraryApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "Z:\Swango\Desktop\GitHub Repositories\Library-App\_Imports.razor"
using LibraryApp.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/search")]
    public partial class Search : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 53 "Z:\Swango\Desktop\GitHub Repositories\Library-App\Pages\Search.razor"
 
    List<string> columnNames = new List<string> { "Title", "Author", "ISBN", "Number of Copies", "Status" };
    List<string> BookSearch = new List<string> { "Title", "Author", "ISBN", "Status" };
    List<Book> bookResult = new List<Book>();
    BookSort userSort = new BookSort();


    // On webpage load
    protected override async Task OnInitializedAsync()
    {
        bookResult = connection.Books.ToList();
    }

    // When something is typed into the search box update the search class
    void changeSearch(ChangeEventArgs s)
    {
        userSort.searchField = s.Value.ToString();
        search();
    }

    // When radio button changes, update the search class
    void changeFilter(string s)
    {
        userSort.filterField = s;
        search();
    }

    // When sort changes, update the search class
    void changeSort(string s)
    {
        // reset all column names
        columnNames[0] = "Title";
        columnNames[1] = "Author";
        columnNames[2] = "ISBN";
        columnNames[3] = "Number of Copies";
        columnNames[4] = "Status";
        columnNames[columnNames.IndexOf(s)] = s + " â†“";

        userSort.sortField = s;
        search();
    }

    // search function
    void search()
    {
        var tempBookResult = from b in connection.Books
                             select b;

        // get the results that only contain X in the field X
        switch (userSort.filterField)
        {
            case "Title":
                tempBookResult = tempBookResult.Where(b => b.Title.Contains(userSort.searchField));
                break;

            case "Author":
                tempBookResult = tempBookResult.Where(b => b.Author.Contains(userSort.searchField));
                break;

            case "ISBN":
                tempBookResult = tempBookResult.Where(b => b.ISBN.Contains(userSort.searchField));
                break;

            case "Status":
                tempBookResult = tempBookResult.Where(b => b.Status.Contains(userSort.searchField));
                break;

            default:
                break;
        }

        // if search field empty, 
        if (userSort.searchField == "" || userSort.searchField == null)
        {
            tempBookResult = from b in connection.Books
                             select b;
        }

        // sort results based on the field selected
        switch (userSort.sortField)
        {
            case "Title":
                tempBookResult = tempBookResult.OrderBy(b => b.Title);
                break;

            case "Author":
                tempBookResult = tempBookResult.OrderBy(b => b.Author);
                break;

            case "ISBN":
                tempBookResult = tempBookResult.OrderBy(b => b.ISBN);
                break;

            case "Number of Copies":
                tempBookResult = tempBookResult.OrderBy(b => b.NumCopies);
                break;

            case "Status":
                tempBookResult = tempBookResult.OrderBy(b => b.Status);
                break;

            default:
                break;
        }


        bookResult = tempBookResult.ToList();
        StateHasChanged();
    }

    class BookSort
    {
        public string filterField = "Title";
        public string searchField;
        public string sortField = "Title";
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private LibraryDBContext connection { get; set; }
    }
}
#pragma warning restore 1591
