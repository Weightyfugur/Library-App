@inject LibraryDBContext connection


@if (ShowDialog)
{

    <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="titleLabel">Delete Book</h5>
                    <button type="button" class="close" @onclick="@Close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@book" OnValidSubmit="@HandleValidSubmit">
                        <button type="submit" class="btn btn-danger">Delete Book</button>
                        <a class="btn btn-outline-primary" @onclick="@Close">Close</a>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    public Book book { get; set; }

    public bool ShowDialog { get; set; }

    [Parameter]
    public Action CloseEventCallback { get; set; }

    public void Show()
    {
        ShowDialog = true;
        StateHasChanged();
    }

    public void Close()
    {
        ShowDialog = false;
        StateHasChanged();
    }

    // Submit button
    void HandleValidSubmit()
    {
        deleteBook();
        ShowDialog = false;
        CloseEventCallback.Invoke();
        StateHasChanged();
    }

    // deletes the book
    void deleteBook()
    {
        connection.Entry(book).State = Microsoft.EntityFrameworkCore.EntityState.Deleted;
        connection.SaveChanges();
    }

    public void setBook(Book _book)
    {
        book = _book;
        StateHasChanged();
    }

}